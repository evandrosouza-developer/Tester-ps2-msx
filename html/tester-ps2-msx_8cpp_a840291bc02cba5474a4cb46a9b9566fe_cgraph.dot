digraph "main"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [label="main",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [color="steelblue1",style="solid"];
  Node2 [label="cdcacm_init",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$cdcacm_8h.html#a05db38774bd2a664cc45495cfde2aa73",tooltip="Inits the cdcacm sub system."];
  Node1 -> Node3 [color="steelblue1",style="solid"];
  Node3 [label="con_available_get_char",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$serial_8c.html#ac4df6fea69f040586ef360ff73ccda80",tooltip="Used to verify the availability in the actual console buffer. It is a non blocking function."];
  Node3 -> Node4 [color="steelblue1",style="solid"];
  Node4 [label="ring_avail_get_ch",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$serial_8c.html#afcaa76e9618a9ea44893a7b4ea642380",tooltip="It returns the number of availabe bytes in the specified ring. It is a non blocking function."];
  Node1 -> Node5 [color="steelblue1",style="solid"];
  Node5 [label="con_get_char",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$serial_8c.html#a82c1a42a56c4ae9077779b43b5caee8f",tooltip="If there is an available char in console ring, it returns with an uint8_t. It is a non blocking funct..."];
  Node1 -> Node6 [color="steelblue1",style="solid"];
  Node6 [label="con_send_string",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$serial_8c.html#ac54f6c904c1b78cc33e6d94d8b7e1aa1",tooltip="Send a ASCIIZ string to serial (up to 127 chars) to console buffer and starts sending...."];
  Node6 -> Node7 [color="steelblue1",style="solid"];
  Node7 [label="do_dma_usart_tx_ring",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$serial_8c.html#a0602b71dae2f607437c0ef26fd4cc19b",tooltip="If DMA is idle, it will be set to the \"get pointer\" of the uart_tx_ring."];
  Node6 -> Node8 [color="steelblue1",style="solid"];
  Node8 [label="first_put_ring_content\l_onto_ep",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$cdcacm_8h.html#a775a23131d52c5bc13ff354e9de08570",tooltip="Starts a communication pipe with an IN Endpoint, to allow that the USB callbacks can take control of ..."];
  Node6 -> Node9 [color="steelblue1",style="solid"];
  Node9 [label="ring_put_ch",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$serial_8c.html#a07469dc6c9ef0cb391bff88443f82d98",tooltip="Puts a byte in the specified ring. It is a non blocking function."];
  Node1 -> Node10 [color="steelblue1",style="solid"];
  Node10 [label="console_get_line",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$serial_8c.html#ad3cf01248042f557929d1096a6b823a6",tooltip="Read a line from console. It is a blocking function."];
  Node10 -> Node6 [color="steelblue1",style="solid"];
  Node1 -> Node11 [color="steelblue1",style="solid"];
  Node11 [label="conv_2a_hex_to_uint8",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$serial_8c.html#aff863a51b6a6ecb316e8fc70fa533f34",tooltip="Convert a two byte string pointed by i into a binary byte."];
  Node1 -> Node12 [color="steelblue1",style="solid"];
  Node12 [label="conv_uint32_to_dec",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$serial_8c.html#ab1b2d19f857e0e3c64758f25607ae8f8",tooltip="Convert a word (32 bit) into a up to 8 char string."];
  Node1 -> Node13 [color="steelblue1",style="solid"];
  Node13 [label="conv_uint8_to_2a_hex",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$serial_8c.html#adf1243f35a18adac6d1f5b02fcb2f594",tooltip="Convert a byte (8 bit binary) to into a 2 char string."];
  Node1 -> Node14 [color="steelblue1",style="solid"];
  Node14 [label="disable_usb",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$cdcacm_8h.html#aece69c760bceda278c8c8fce8fcc38d2",tooltip="Disables the USB to make host disconnect."];
  Node1 -> Node15 [color="steelblue1",style="solid"];
  Node15 [label="msxmap::general_debug\l_setup",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classmsxmap.html#a5b428f0a19a4cba4334f2982550bbd85",tooltip="Properly sets up the all debug output pins."];
  Node1 -> Node16 [color="steelblue1",style="solid"];
  Node16 [label="pascal_string_init",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$serial_8c.html#a98aa51196c9b62456daf7a62998d1168",tooltip="Does prepare DMA if it is idle if DMA is idle. It is used force a start DMA sending of uart_tx_ring,..."];
  Node1 -> Node17 [color="steelblue1",style="solid"];
  Node17 [label="serial_rx_restart",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$serial_8c.html#adb99c3b7dc965171ca90f0770c5de9cd",tooltip="Restart the USART."];
  Node1 -> Node18 [color="steelblue1",style="solid"];
  Node18 [label="serial_setup",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$serial_8c.html#af69abfa38a4afe7963dcc8d4901c5a63",tooltip="Setup the USART and DMA."];
  Node18 -> Node19 [color="steelblue1",style="solid"];
  Node19 [label="ring_init",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$serial_8c.html#a9e25311a663dda3a933f14bfd7beb6a8",tooltip="Inits the struct sring ring."];
  Node1 -> Node20 [color="steelblue1",style="solid"];
  Node20 [label="serialno_read",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$serial__no_8c.html#a7305f05eb340f05b437a8483298aad75",tooltip=" "];
  Node1 -> Node21 [color="steelblue1",style="solid"];
  Node21 [label="string_append",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$serial_8c.html#a121f4c985d238ae53020ece40f11724d",tooltip="Appends an ASCIIZ (uint8_t) string at the end of s_pascal_string buffer."];
  Node1 -> Node22 [color="steelblue1",style="solid"];
  Node22 [label="systick_setup",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$sys__timer_8cpp.html#ad503852cf33facead172697e7995ab6b",tooltip="Sets up the system timer to defaults of the system."];
  Node1 -> Node23 [color="steelblue1",style="solid"];
  Node23 [label="systick_update",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$sys__timer_8cpp.html#a478c9699629442e2474ebee5bddd774c",tooltip="Reprograms the system timer according to a lookup table."];
  Node1 -> Node24 [color="steelblue1",style="solid"];
  Node24 [label="tim_hr_setup",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$hr__timer_8c.html#a8ae961e30b547238f645ad27ec6f5b85",tooltip="Sets up the struct sring ring."];
}
